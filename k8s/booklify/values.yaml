# Default values for booklify.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

frontend:
    replicaCount: 1
    image: registry.cdev.nexus/booklify-ce/frontend
    tag: v2
    pullPolicy: Always

    ingress:
        enabled: true
        className: ""
        annotations: {}
        hosts:
            - host: a.host
              paths:
                  - path: /
                    pathType: ImplementationSpecific
        tls:
            - secretName: a.host-tls
              hosts:
                  - a.host

    service:
        type: ClusterIP
        port: 80

backend:
    replicaCount: 1
    image: registry.cdev.nexus/booklify-ce/backend
    tag: v2
    pullPolicy: Always

    config:
        url: 'http://localhost:4200'
        disable_registration: false
        cors: '*'
        db:
            url: 'postgresql://uwu:owo@localhost:5432/mangalist?schema=public'
        mail:
            enabled: false
            smtp: ''
            from: '"Booklify" <me@example.com>'
        s3:
            endpoint: ''
            port: 9000
            access_key: ''
            secret_key: ''
            use_ssl: false
            bucket_name: mangalist
        security:
            key: AVerySecurePassword
            access_token_expiration: 1h
            max_session_idle_days: 90
            max_temp_session_age_days: 1
        debug:
            show_query: false
            always_regroup: false
        isbndb:
            key: ''
        geonode:
            username: ''
            password: ''
        recaptcha:
            enabled: true
            secret: 6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
            site_key: 6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
        tasks:
            recrawlCover:
                enabled: true
                cron: '* * * * *'
            recrawlInfo:
                enabled: true
                cron: '* * * * *'
            tryFindCover:
                enabled: true
                cron: 0 * * * *
            doLongruning:
                enabled: true
                cron: '* * * * *'
            updateOutdatedGrouping:
                enabled: true
                cron: '* * * * *'
        legal:
            enabled: true
            privacy_policy: 'https://example.com/privacy'
            terms_of_service: 'https://example.com/tos'

    ingress:
        enabled: true
        className: ""
        annotations: {}

        hosts:
            - host: api.a.host
              paths:
                  - path: /
                    pathType: ImplementationSpecific
        tls:
            - secretName: api.a.host-tls
              hosts:
                  - api.a.host

    service:
        type: ClusterIP
        port: 80

serviceAccount:
    create: true
    annotations: {}
    name: ""

podAnnotations: {}
podSecurityContext: {}

securityContext: {}

resources: {}

autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
